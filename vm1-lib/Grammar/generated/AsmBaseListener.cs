//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Asm.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IAsmListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class AsmBaseListener : IAsmListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="AsmParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] AsmParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="AsmParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] AsmParser.ProgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>nopStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNopStmt([NotNull] AsmParser.NopStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>nopStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNopStmt([NotNull] AsmParser.NopStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>iaddStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIaddStmt([NotNull] AsmParser.IaddStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>iaddStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIaddStmt([NotNull] AsmParser.IaddStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>isubStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIsubStmt([NotNull] AsmParser.IsubStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>isubStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIsubStmt([NotNull] AsmParser.IsubStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>imulStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImulStmt([NotNull] AsmParser.ImulStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>imulStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImulStmt([NotNull] AsmParser.ImulStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>iltStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIltStmt([NotNull] AsmParser.IltStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>iltStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIltStmt([NotNull] AsmParser.IltStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>ieqStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIeqStmt([NotNull] AsmParser.IeqStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>ieqStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIeqStmt([NotNull] AsmParser.IeqStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>brStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBrStmt([NotNull] AsmParser.BrStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>brStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBrStmt([NotNull] AsmParser.BrStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>brtStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBrtStmt([NotNull] AsmParser.BrtStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>brtStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBrtStmt([NotNull] AsmParser.BrtStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>brfStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBrfStmt([NotNull] AsmParser.BrfStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>brfStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBrfStmt([NotNull] AsmParser.BrfStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>iconstStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIconstStmt([NotNull] AsmParser.IconstStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>iconstStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIconstStmt([NotNull] AsmParser.IconstStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>loadStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoadStmt([NotNull] AsmParser.LoadStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>loadStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoadStmt([NotNull] AsmParser.LoadStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>gloadStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGloadStmt([NotNull] AsmParser.GloadStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>gloadStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGloadStmt([NotNull] AsmParser.GloadStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>storeStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStoreStmt([NotNull] AsmParser.StoreStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>storeStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStoreStmt([NotNull] AsmParser.StoreStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>gstoreStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGstoreStmt([NotNull] AsmParser.GstoreStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>gstoreStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGstoreStmt([NotNull] AsmParser.GstoreStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>printStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrintStmt([NotNull] AsmParser.PrintStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>printStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrintStmt([NotNull] AsmParser.PrintStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>popStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPopStmt([NotNull] AsmParser.PopStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>popStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPopStmt([NotNull] AsmParser.PopStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>callStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCallStmt([NotNull] AsmParser.CallStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>callStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCallStmt([NotNull] AsmParser.CallStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>retStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRetStmt([NotNull] AsmParser.RetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>retStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRetStmt([NotNull] AsmParser.RetStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>haltStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHaltStmt([NotNull] AsmParser.HaltStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>haltStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHaltStmt([NotNull] AsmParser.HaltStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>blankStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlankStmt([NotNull] AsmParser.BlankStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>blankStmt</c>
	/// labeled alternative in <see cref="AsmParser.stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlankStmt([NotNull] AsmParser.BlankStmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>intExpr</c>
	/// labeled alternative in <see cref="AsmParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntExpr([NotNull] AsmParser.IntExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>intExpr</c>
	/// labeled alternative in <see cref="AsmParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntExpr([NotNull] AsmParser.IntExprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by the <c>idExpr</c>
	/// labeled alternative in <see cref="AsmParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdExpr([NotNull] AsmParser.IdExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>idExpr</c>
	/// labeled alternative in <see cref="AsmParser.expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdExpr([NotNull] AsmParser.IdExprContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
