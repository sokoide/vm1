//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Asm.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public partial class AsmLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		COMMENT=1, NOP=2, IADD=3, ISUB=4, IMUL=5, ILT=6, IEQ=7, BR=8, BRT=9, BRF=10, 
		ICONST=11, LOAD=12, GLOAD=13, STORE=14, GSTORE=15, PRINT=16, POP=17, CALL=18, 
		RET=19, HALT=20, ID=21, INT=22, NEWLINE=23, WS=24;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"COMMENT", "NOP", "IADD", "ISUB", "IMUL", "ILT", "IEQ", "BR", "BRT", "BRF", 
		"ICONST", "LOAD", "GLOAD", "STORE", "GSTORE", "PRINT", "POP", "CALL", 
		"RET", "HALT", "ID", "INT", "NEWLINE", "WS"
	};


	public AsmLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public AsmLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'nop'", "'iadd'", "'isub'", "'mul'", "'ilt'", "'ieq'", "'br'", 
		"'brt'", "'brf'", "'iconst'", "'load'", "'gload'", "'store'", "'gstore'", 
		"'print'", "'pop'", "'call'", "'ret'", "'halt'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "COMMENT", "NOP", "IADD", "ISUB", "IMUL", "ILT", "IEQ", "BR", "BRT", 
		"BRF", "ICONST", "LOAD", "GLOAD", "STORE", "GSTORE", "PRINT", "POP", "CALL", 
		"RET", "HALT", "ID", "INT", "NEWLINE", "WS"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Asm.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static AsmLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '\x1A', '\xB0', '\b', '\x1', '\x4', '\x2', '\t', '\x2', 
		'\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', '\x5', '\t', 
		'\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', '\x4', '\b', 
		'\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', '\x4', '\v', 
		'\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', '\x4', '\xE', 
		'\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', '\x10', '\x4', 
		'\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', '\x13', '\t', 
		'\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', '\x15', '\x4', 
		'\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', '\x18', '\t', 
		'\x18', '\x4', '\x19', '\t', '\x19', '\x3', '\x2', '\x3', '\x2', '\x3', 
		'\x2', '\x3', '\x2', '\a', '\x2', '\x38', '\n', '\x2', '\f', '\x2', '\xE', 
		'\x2', ';', '\v', '\x2', '\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', 
		'\x3', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', '\x3', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', 
		'\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', '\x3', '\a', '\x3', '\a', 
		'\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', 
		'\t', '\x3', '\t', '\x3', '\n', '\x3', '\n', '\x3', '\n', '\x3', '\n', 
		'\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', 
		'\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', '\x3', '\f', 
		'\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', '\r', '\x3', 
		'\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', 
		'\xE', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', '\xF', '\x3', 
		'\xF', '\x3', '\xF', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', 
		'\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', 
		'\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', '\x11', '\x3', 
		'\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', '\x3', 
		'\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x13', '\x3', '\x14', '\x3', 
		'\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x3', '\x15', '\x3', 
		'\x15', '\x3', '\x15', '\x3', '\x15', '\x3', '\x16', '\x6', '\x16', '\x9C', 
		'\n', '\x16', '\r', '\x16', '\xE', '\x16', '\x9D', '\x3', '\x17', '\x6', 
		'\x17', '\xA1', '\n', '\x17', '\r', '\x17', '\xE', '\x17', '\xA2', '\x3', 
		'\x18', '\x6', '\x18', '\xA6', '\n', '\x18', '\r', '\x18', '\xE', '\x18', 
		'\xA7', '\x3', '\x19', '\x6', '\x19', '\xAB', '\n', '\x19', '\r', '\x19', 
		'\xE', '\x19', '\xAC', '\x3', '\x19', '\x3', '\x19', '\x2', '\x2', '\x1A', 
		'\x3', '\x3', '\x5', '\x4', '\a', '\x5', '\t', '\x6', '\v', '\a', '\r', 
		'\b', '\xF', '\t', '\x11', '\n', '\x13', '\v', '\x15', '\f', '\x17', '\r', 
		'\x19', '\xE', '\x1B', '\xF', '\x1D', '\x10', '\x1F', '\x11', '!', '\x12', 
		'#', '\x13', '%', '\x14', '\'', '\x15', ')', '\x16', '+', '\x17', '-', 
		'\x18', '/', '\x19', '\x31', '\x1A', '\x3', '\x2', '\x6', '\x4', '\x2', 
		'\f', '\f', '\xF', '\xF', '\x4', '\x2', '\x43', '\\', '\x63', '|', '\x3', 
		'\x2', '\x32', ';', '\x4', '\x2', '\v', '\v', '\"', '\"', '\x2', '\xB4', 
		'\x2', '\x3', '\x3', '\x2', '\x2', '\x2', '\x2', '\x5', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\a', '\x3', '\x2', '\x2', '\x2', '\x2', '\t', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\v', '\x3', '\x2', '\x2', '\x2', '\x2', '\r', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\xF', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x11', '\x3', '\x2', '\x2', '\x2', '\x2', '\x13', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x15', '\x3', '\x2', '\x2', '\x2', '\x2', '\x17', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x19', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1B', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1D', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1F', '\x3', '\x2', '\x2', '\x2', '\x2', '!', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '#', '\x3', '\x2', '\x2', '\x2', '\x2', '%', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\'', '\x3', '\x2', '\x2', '\x2', '\x2', 
		')', '\x3', '\x2', '\x2', '\x2', '\x2', '+', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '-', '\x3', '\x2', '\x2', '\x2', '\x2', '/', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x31', '\x3', '\x2', '\x2', '\x2', '\x3', '\x33', '\x3', 
		'\x2', '\x2', '\x2', '\x5', '>', '\x3', '\x2', '\x2', '\x2', '\a', '\x42', 
		'\x3', '\x2', '\x2', '\x2', '\t', 'G', '\x3', '\x2', '\x2', '\x2', '\v', 
		'L', '\x3', '\x2', '\x2', '\x2', '\r', 'P', '\x3', '\x2', '\x2', '\x2', 
		'\xF', 'T', '\x3', '\x2', '\x2', '\x2', '\x11', 'X', '\x3', '\x2', '\x2', 
		'\x2', '\x13', '[', '\x3', '\x2', '\x2', '\x2', '\x15', '_', '\x3', '\x2', 
		'\x2', '\x2', '\x17', '\x63', '\x3', '\x2', '\x2', '\x2', '\x19', 'j', 
		'\x3', '\x2', '\x2', '\x2', '\x1B', 'o', '\x3', '\x2', '\x2', '\x2', '\x1D', 
		'u', '\x3', '\x2', '\x2', '\x2', '\x1F', '{', '\x3', '\x2', '\x2', '\x2', 
		'!', '\x82', '\x3', '\x2', '\x2', '\x2', '#', '\x88', '\x3', '\x2', '\x2', 
		'\x2', '%', '\x8C', '\x3', '\x2', '\x2', '\x2', '\'', '\x91', '\x3', '\x2', 
		'\x2', '\x2', ')', '\x95', '\x3', '\x2', '\x2', '\x2', '+', '\x9B', '\x3', 
		'\x2', '\x2', '\x2', '-', '\xA0', '\x3', '\x2', '\x2', '\x2', '/', '\xA5', 
		'\x3', '\x2', '\x2', '\x2', '\x31', '\xAA', '\x3', '\x2', '\x2', '\x2', 
		'\x33', '\x34', '\a', '\x31', '\x2', '\x2', '\x34', '\x35', '\a', '\x31', 
		'\x2', '\x2', '\x35', '\x39', '\x3', '\x2', '\x2', '\x2', '\x36', '\x38', 
		'\n', '\x2', '\x2', '\x2', '\x37', '\x36', '\x3', '\x2', '\x2', '\x2', 
		'\x38', ';', '\x3', '\x2', '\x2', '\x2', '\x39', '\x37', '\x3', '\x2', 
		'\x2', '\x2', '\x39', ':', '\x3', '\x2', '\x2', '\x2', ':', '<', '\x3', 
		'\x2', '\x2', '\x2', ';', '\x39', '\x3', '\x2', '\x2', '\x2', '<', '=', 
		'\b', '\x2', '\x2', '\x2', '=', '\x4', '\x3', '\x2', '\x2', '\x2', '>', 
		'?', '\a', 'p', '\x2', '\x2', '?', '@', '\a', 'q', '\x2', '\x2', '@', 
		'\x41', '\a', 'r', '\x2', '\x2', '\x41', '\x6', '\x3', '\x2', '\x2', '\x2', 
		'\x42', '\x43', '\a', 'k', '\x2', '\x2', '\x43', '\x44', '\a', '\x63', 
		'\x2', '\x2', '\x44', '\x45', '\a', '\x66', '\x2', '\x2', '\x45', '\x46', 
		'\a', '\x66', '\x2', '\x2', '\x46', '\b', '\x3', '\x2', '\x2', '\x2', 
		'G', 'H', '\a', 'k', '\x2', '\x2', 'H', 'I', '\a', 'u', '\x2', '\x2', 
		'I', 'J', '\a', 'w', '\x2', '\x2', 'J', 'K', '\a', '\x64', '\x2', '\x2', 
		'K', '\n', '\x3', '\x2', '\x2', '\x2', 'L', 'M', '\a', 'o', '\x2', '\x2', 
		'M', 'N', '\a', 'w', '\x2', '\x2', 'N', 'O', '\a', 'n', '\x2', '\x2', 
		'O', '\f', '\x3', '\x2', '\x2', '\x2', 'P', 'Q', '\a', 'k', '\x2', '\x2', 
		'Q', 'R', '\a', 'n', '\x2', '\x2', 'R', 'S', '\a', 'v', '\x2', '\x2', 
		'S', '\xE', '\x3', '\x2', '\x2', '\x2', 'T', 'U', '\a', 'k', '\x2', '\x2', 
		'U', 'V', '\a', 'g', '\x2', '\x2', 'V', 'W', '\a', 's', '\x2', '\x2', 
		'W', '\x10', '\x3', '\x2', '\x2', '\x2', 'X', 'Y', '\a', '\x64', '\x2', 
		'\x2', 'Y', 'Z', '\a', 't', '\x2', '\x2', 'Z', '\x12', '\x3', '\x2', '\x2', 
		'\x2', '[', '\\', '\a', '\x64', '\x2', '\x2', '\\', ']', '\a', 't', '\x2', 
		'\x2', ']', '^', '\a', 'v', '\x2', '\x2', '^', '\x14', '\x3', '\x2', '\x2', 
		'\x2', '_', '`', '\a', '\x64', '\x2', '\x2', '`', '\x61', '\a', 't', '\x2', 
		'\x2', '\x61', '\x62', '\a', 'h', '\x2', '\x2', '\x62', '\x16', '\x3', 
		'\x2', '\x2', '\x2', '\x63', '\x64', '\a', 'k', '\x2', '\x2', '\x64', 
		'\x65', '\a', '\x65', '\x2', '\x2', '\x65', '\x66', '\a', 'q', '\x2', 
		'\x2', '\x66', 'g', '\a', 'p', '\x2', '\x2', 'g', 'h', '\a', 'u', '\x2', 
		'\x2', 'h', 'i', '\a', 'v', '\x2', '\x2', 'i', '\x18', '\x3', '\x2', '\x2', 
		'\x2', 'j', 'k', '\a', 'n', '\x2', '\x2', 'k', 'l', '\a', 'q', '\x2', 
		'\x2', 'l', 'm', '\a', '\x63', '\x2', '\x2', 'm', 'n', '\a', '\x66', '\x2', 
		'\x2', 'n', '\x1A', '\x3', '\x2', '\x2', '\x2', 'o', 'p', '\a', 'i', '\x2', 
		'\x2', 'p', 'q', '\a', 'n', '\x2', '\x2', 'q', 'r', '\a', 'q', '\x2', 
		'\x2', 'r', 's', '\a', '\x63', '\x2', '\x2', 's', 't', '\a', '\x66', '\x2', 
		'\x2', 't', '\x1C', '\x3', '\x2', '\x2', '\x2', 'u', 'v', '\a', 'u', '\x2', 
		'\x2', 'v', 'w', '\a', 'v', '\x2', '\x2', 'w', 'x', '\a', 'q', '\x2', 
		'\x2', 'x', 'y', '\a', 't', '\x2', '\x2', 'y', 'z', '\a', 'g', '\x2', 
		'\x2', 'z', '\x1E', '\x3', '\x2', '\x2', '\x2', '{', '|', '\a', 'i', '\x2', 
		'\x2', '|', '}', '\a', 'u', '\x2', '\x2', '}', '~', '\a', 'v', '\x2', 
		'\x2', '~', '\x7F', '\a', 'q', '\x2', '\x2', '\x7F', '\x80', '\a', 't', 
		'\x2', '\x2', '\x80', '\x81', '\a', 'g', '\x2', '\x2', '\x81', ' ', '\x3', 
		'\x2', '\x2', '\x2', '\x82', '\x83', '\a', 'r', '\x2', '\x2', '\x83', 
		'\x84', '\a', 't', '\x2', '\x2', '\x84', '\x85', '\a', 'k', '\x2', '\x2', 
		'\x85', '\x86', '\a', 'p', '\x2', '\x2', '\x86', '\x87', '\a', 'v', '\x2', 
		'\x2', '\x87', '\"', '\x3', '\x2', '\x2', '\x2', '\x88', '\x89', '\a', 
		'r', '\x2', '\x2', '\x89', '\x8A', '\a', 'q', '\x2', '\x2', '\x8A', '\x8B', 
		'\a', 'r', '\x2', '\x2', '\x8B', '$', '\x3', '\x2', '\x2', '\x2', '\x8C', 
		'\x8D', '\a', '\x65', '\x2', '\x2', '\x8D', '\x8E', '\a', '\x63', '\x2', 
		'\x2', '\x8E', '\x8F', '\a', 'n', '\x2', '\x2', '\x8F', '\x90', '\a', 
		'n', '\x2', '\x2', '\x90', '&', '\x3', '\x2', '\x2', '\x2', '\x91', '\x92', 
		'\a', 't', '\x2', '\x2', '\x92', '\x93', '\a', 'g', '\x2', '\x2', '\x93', 
		'\x94', '\a', 'v', '\x2', '\x2', '\x94', '(', '\x3', '\x2', '\x2', '\x2', 
		'\x95', '\x96', '\a', 'j', '\x2', '\x2', '\x96', '\x97', '\a', '\x63', 
		'\x2', '\x2', '\x97', '\x98', '\a', 'n', '\x2', '\x2', '\x98', '\x99', 
		'\a', 'v', '\x2', '\x2', '\x99', '*', '\x3', '\x2', '\x2', '\x2', '\x9A', 
		'\x9C', '\t', '\x3', '\x2', '\x2', '\x9B', '\x9A', '\x3', '\x2', '\x2', 
		'\x2', '\x9C', '\x9D', '\x3', '\x2', '\x2', '\x2', '\x9D', '\x9B', '\x3', 
		'\x2', '\x2', '\x2', '\x9D', '\x9E', '\x3', '\x2', '\x2', '\x2', '\x9E', 
		',', '\x3', '\x2', '\x2', '\x2', '\x9F', '\xA1', '\t', '\x4', '\x2', '\x2', 
		'\xA0', '\x9F', '\x3', '\x2', '\x2', '\x2', '\xA1', '\xA2', '\x3', '\x2', 
		'\x2', '\x2', '\xA2', '\xA0', '\x3', '\x2', '\x2', '\x2', '\xA2', '\xA3', 
		'\x3', '\x2', '\x2', '\x2', '\xA3', '.', '\x3', '\x2', '\x2', '\x2', '\xA4', 
		'\xA6', '\t', '\x2', '\x2', '\x2', '\xA5', '\xA4', '\x3', '\x2', '\x2', 
		'\x2', '\xA6', '\xA7', '\x3', '\x2', '\x2', '\x2', '\xA7', '\xA5', '\x3', 
		'\x2', '\x2', '\x2', '\xA7', '\xA8', '\x3', '\x2', '\x2', '\x2', '\xA8', 
		'\x30', '\x3', '\x2', '\x2', '\x2', '\xA9', '\xAB', '\t', '\x5', '\x2', 
		'\x2', '\xAA', '\xA9', '\x3', '\x2', '\x2', '\x2', '\xAB', '\xAC', '\x3', 
		'\x2', '\x2', '\x2', '\xAC', '\xAA', '\x3', '\x2', '\x2', '\x2', '\xAC', 
		'\xAD', '\x3', '\x2', '\x2', '\x2', '\xAD', '\xAE', '\x3', '\x2', '\x2', 
		'\x2', '\xAE', '\xAF', '\b', '\x19', '\x2', '\x2', '\xAF', '\x32', '\x3', 
		'\x2', '\x2', '\x2', '\b', '\x2', '\x39', '\x9D', '\xA2', '\xA7', '\xAC', 
		'\x3', '\b', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
